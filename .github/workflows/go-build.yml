name: build-and-test

on:
  push:
    branches: [ 'main' ]
  pull_request:
    branches: [ 'main' ]

permissions:
  contents: read

jobs:
  build:
    name: Build, test & cross-compile
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go (from go.mod)
        uses: actions/setup-go@v5
        with:
          # Use version declared in go.mod/toolchain (fallback) â€“ allow patch updates
          go-version: '1.24.x'
          cache: true

      - name: Verify modules
        run: go mod download

      - name: Build (host platform)
        run: go build -v -o tsmetrics ./...

      - name: Run tests
        run: go test -v ./...

      - name: Cross-compile release binaries
        run: |
          set -euo pipefail
          targets="linux/amd64 linux/arm64 windows/amd64 darwin/amd64 darwin/arm64"
          for target in $targets; do
            IFS=/ read -r GOOS GOARCH <<<"$target"
            BIN="tsmetrics_${GOOS}_${GOARCH}"
            if [ "$GOOS" = windows ]; then BIN="${BIN}.exe"; fi
            echo "Building $BIN"
            GOOS=$GOOS GOARCH=$GOARCH CGO_ENABLED=0 go build -trimpath -ldflags='-s -w' -o "$BIN" .
          done
          ls -1 tsmetrics_*

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tsmetrics-binaries
          path: |
            tsmetrics_linux_amd64
            tsmetrics_linux_arm64
            tsmetrics_windows_amd64.exe
            tsmetrics_darwin_amd64
            tsmetrics_darwin_arm64



